class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> res=new ArrayList<>();
        if(digits.length()==0)return res;
        String[] letters={"abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        Queue<String> que=new LinkedList<>();
        String first=letters[digits.charAt(0)-'2'];
        for(int i=0;i<first.length();i++){
            que.offer(""+first.charAt(i));
        }
        for(int i=1;i<digits.length();i++){
            String cur=letters[digits.charAt(i)-'2'];
            int tmp=que.size();
            for(int j=0;j<tmp;j++){
                String tt=que.peek();
                que.poll();
                for(int k=0;k<cur.length();k++){
                    que.offer(tt+cur.charAt(k));
                }
            }
        }
        int si=que.size();
        for(int i=0;i<si;i++){
            res.add(que.peek());
            que.poll();
        }
        return res;
    }
}
